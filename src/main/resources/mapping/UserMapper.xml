<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ShawnYin.WSP.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.ShawnYin.WSP.entity.User" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="passWord" property="password" jdbcType="VARCHAR" />
    <result column="realName" property="realname" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="phoneNumber" property="phonenumber" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    userId, userName, passWord, realName, sex, birthday, phoneNumber, email, level
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userId = #{userid,jdbcType=INTEGER}
  </select>

  <!-- 获取用户数量 -->
  <select id="getUserNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select COUNT(*) from user
  </select>
  
  <!-- 根据用户ID查看是否具有下载权限 -->
  <select id="getDownloadPermission" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT level FROM user WHERE userId =#{userID}
  </select>

  <!-- 根据用户名和密码获取某一用户 -->
  <select id="getUser" parameterType="Map" resultType="com.ShawnYin.WSP.entity.User">
    select * from user where userName=#{username} and passWord=#{password}
  </select>

  <!-- 根据用户名获取某个用户 -->
  <select id="getUserByName" parameterType="java.lang.String" resultType="com.ShawnYin.WSP.entity.User">
    select * from user where userName=#{username}
  </select>

  <!-- 用户注册 -->
  <!-- 后期需要改动，添加level -->
  <insert id="userRegister" parameterType="com.ShawnYin.WSP.entity.User">
    insert into user (userName,passWord,realName,sex,birthday,phoneNumber,email,level) values (#{username},#{password},#{realname},#{sex},#{birthday},#{phonenumber},#{email},3)
  </insert>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ShawnYin.WSP.entity.User" >
    insert into user (userId, userName, passWord, 
      realName, sex, birthday, 
      phoneNumber, email)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{phonenumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ShawnYin.WSP.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="password != null" >
        passWord,
      </if>
      <if test="realname != null" >
        realName,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="phonenumber != null" >
        phoneNumber,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="phonenumber != null" >
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ShawnYin.WSP.entity.User" >
    update user
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        passWord = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realName = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="phonenumber != null" >
        phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ShawnYin.WSP.entity.User" >
    update user
    set userName = #{username,jdbcType=VARCHAR},
      passWord = #{password,jdbcType=VARCHAR},
      realName = #{realname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>