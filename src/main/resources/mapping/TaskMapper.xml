<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ShawnYin.WSP.mapper.TaskMapper" >
  <resultMap id="BaseResultMap" type="com.ShawnYin.WSP.entity.Task" >
    <id column="taskId" property="taskid" jdbcType="INTEGER" />
    <result column="taskName" property="taskname" jdbcType="VARCHAR" />
    <result column="postTime" property="posttime" jdbcType="DATE" />
    <result column="deadLine" property="deadline" jdbcType="DATE" />
    <result column="userId" property="userid" jdbcType="VARCHAR" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="coin" property="coin" jdbcType="FLOAT" />
    <result column="describe_task" property="describe_task" jdbcType="VARCHAR" />
    <result column="totalNum" property="totalNum" jdbcType="INTEGER" />
    <result column="taskStatus" property="taskstatus" jdbcType="INTEGER" />
    <result column="taskKind" property="taskkind" jdbcType="INTEGER" />
    <result column="temp" property="temp" jdbcType="INTEGER" />
    <result column="longitude" property="longitude" jdbcType="DOUBLE" />
    <result column="latitude" property="latitude" jdbcType="DOUBLE" />
    <result column="totalWorker" property="totalworker" jdbcType="INTEGER" />
    <result column="nowWorker" property="nowworker" jdbcType="INTEGER" />
    <result column="needWorker" property="needworker" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    taskId, taskName, postTime, deadLine, userId, userName, coin, describe_task, totalNum,
    taskStatus, taskKind, temp, longitude, latitude, totalWorker, nowWorker, needWorker,
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from unfinishedtask
    where taskId = #{taskid,jdbcType=INTEGER}
  </select>

  <!-- 获取未完成任务的数量 -->
  <select id="getUnfinishedTaskNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select COUNT(*) from unfinishedtask
  </select>

  <!-- 获取未完成的所有任务 -->
  <select id="getAllUnfinishedTask" parameterType="java.lang.Integer" resultType="com.ShawnYin.WSP.entity.Task">
    SELECT * FROM unfinishedtask
  </select>

  <!-- 获取已完成任务的数量 -->
  <select id="getFinishedTaskNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select COUNT(*) from finishedtask
  </select>

  <!-- 获取已完成的所有任务 -->
  <select id="getAllFinishedTask" parameterType="java.lang.Integer" resultType="com.ShawnYin.WSP.entity.Task">
    SELECT * FROM finishedtask
  </select>

  <!-- 获取任务的经纬度 -->
  <select id="getTaskLonLat" parameterType="java.lang.Integer" resultType="map">
    SELECT longitude,latitude FROM unfinishedtask
  </select>

  <!-- 根据用户ID获取该用户发布的未完成任务 -->
  <select id="getUnfinishedTaskByUserID" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT * FROM unfinishedtask WHERE userId = #{id,jdbcType=INTEGER}
  </select>

  <!-- 根据用户ID获取该用户发布的已完成任务 -->
  <select id="getFinishedTaskByUserID" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT * FROM finishedtask WHERE userId = #{id,jdbcType=INTEGER}
  </select>

  <!-- 根据ID获取任务 -->
  <select id="getUnfinishedTaskByID" parameterType="java.lang.Integer" resultType="com.ShawnYin.WSP.entity.Task">
    SELECT * FROM unfinishedtask WHERE taskId = #{id,jdbcType=INTEGER}
  </select>
  <select id="getFinishedTaskByID" parameterType="java.lang.Integer" resultType="com.ShawnYin.WSP.entity.Task">
    SELECT * FROM finishedtask WHERE taskId = #{id,jdbcType=INTEGER}
  </select>

  <!-- 根据完成状态插入任务 -->
  <insert id="insertAppIntoFinishedTask" parameterType="com.ShawnYin.WSP.entity.Task">
    insert into finishedtask (taskName,postTime,deadLine,userId,userName,coin,describe_task,totalNum,taskStatus,taskKind,temp,longitude,latitude,totalWorker,nowWorker,needWorker)
    values (#{taskname},#{posttime},#{deadline},#{userid},#{username},#{coin},#{describe_task},#{totalNum},#{taskstatus},#{taskkind},#{temp},#{longitude},#{latitude},#{totalworker},#{nowworker},#{needworker})
  </insert>
  <insert id="insertAppIntoUnfinishedTask" parameterType="com.ShawnYin.WSP.entity.Task">
    insert into unfinishedtask (taskName,postTime,deadLine,userId,userName,coin,describe_task,totalNum,taskStatus,taskKind,temp,longitude,latitude,totalWorker,nowWorker,needWorker)
    values (#{taskname},#{posttime},#{deadline},#{userid},#{username},#{coin},#{describe_task},#{totalNum},#{taskstatus},#{taskkind},#{temp},#{longitude},#{latitude},#{totalworker},#{nowworker},#{needworker})
  </insert>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from unfinishedtask
    where taskId = #{taskid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ShawnYin.WSP.entity.Task" >
    insert into unfinishedtask (taskId, taskName, publisherId, 
      publisherName, taskType, taskDescribe, 
      taskStatus, publishTime, deadline, 
      latitude, longitude, totalWorker, 
      nowWorker, needWorker, coin
      )
    values (#{taskid,jdbcType=INTEGER}, #{taskname,jdbcType=VARCHAR}, #{publisherid,jdbcType=VARCHAR}, 
      #{publishername,jdbcType=VARCHAR}, #{tasktype,jdbcType=INTEGER}, #{taskdescribe,jdbcType=VARCHAR}, 
      #{taskstatus,jdbcType=INTEGER}, #{publishtime,jdbcType=DATE}, #{deadline,jdbcType=DATE}, 
      #{latitude,jdbcType=DOUBLE}, #{longitude,jdbcType=DOUBLE}, #{totalworker,jdbcType=INTEGER}, 
      #{nowworker,jdbcType=INTEGER}, #{needworker,jdbcType=INTEGER}, #{coin,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ShawnYin.WSP.entity.Task" >
    insert into unfinishedtask
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskid != null" >
        taskId,
      </if>
      <if test="taskname != null" >
        taskName,
      </if>
      <if test="publisherid != null" >
        publisherId,
      </if>
      <if test="publishername != null" >
        publisherName,
      </if>
      <if test="tasktype != null" >
        taskType,
      </if>
      <if test="taskdescribe != null" >
        taskDescribe,
      </if>
      <if test="taskstatus != null" >
        taskStatus,
      </if>
      <if test="publishtime != null" >
        publishTime,
      </if>
      <if test="deadline != null" >
        deadline,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="totalworker != null" >
        totalWorker,
      </if>
      <if test="nowworker != null" >
        nowWorker,
      </if>
      <if test="needworker != null" >
        needWorker,
      </if>
      <if test="coin != null" >
        coin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskid != null" >
        #{taskid,jdbcType=INTEGER},
      </if>
      <if test="taskname != null" >
        #{taskname,jdbcType=VARCHAR},
      </if>
      <if test="publisherid != null" >
        #{publisherid,jdbcType=VARCHAR},
      </if>
      <if test="publishername != null" >
        #{publishername,jdbcType=VARCHAR},
      </if>
      <if test="tasktype != null" >
        #{tasktype,jdbcType=INTEGER},
      </if>
      <if test="taskdescribe != null" >
        #{taskdescribe,jdbcType=VARCHAR},
      </if>
      <if test="taskstatus != null" >
        #{taskstatus,jdbcType=INTEGER},
      </if>
      <if test="publishtime != null" >
        #{publishtime,jdbcType=DATE},
      </if>
      <if test="deadline != null" >
        #{deadline,jdbcType=DATE},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="totalworker != null" >
        #{totalworker,jdbcType=INTEGER},
      </if>
      <if test="nowworker != null" >
        #{nowworker,jdbcType=INTEGER},
      </if>
      <if test="needworker != null" >
        #{needworker,jdbcType=INTEGER},
      </if>
      <if test="coin != null" >
        #{coin,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ShawnYin.WSP.entity.Task" >
    update unfinishedtask
    <set >
      <if test="taskname != null" >
        taskName = #{taskname,jdbcType=VARCHAR},
      </if>
      <if test="publisherid != null" >
        publisherId = #{publisherid,jdbcType=VARCHAR},
      </if>
      <if test="publishername != null" >
        publisherName = #{publishername,jdbcType=VARCHAR},
      </if>
      <if test="tasktype != null" >
        taskType = #{tasktype,jdbcType=INTEGER},
      </if>
      <if test="taskdescribe != null" >
        taskDescribe = #{taskdescribe,jdbcType=VARCHAR},
      </if>
      <if test="taskstatus != null" >
        taskStatus = #{taskstatus,jdbcType=INTEGER},
      </if>
      <if test="publishtime != null" >
        publishTime = #{publishtime,jdbcType=DATE},
      </if>
      <if test="deadline != null" >
        deadline = #{deadline,jdbcType=DATE},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="totalworker != null" >
        totalWorker = #{totalworker,jdbcType=INTEGER},
      </if>
      <if test="nowworker != null" >
        nowWorker = #{nowworker,jdbcType=INTEGER},
      </if>
      <if test="needworker != null" >
        needWorker = #{needworker,jdbcType=INTEGER},
      </if>
      <if test="coin != null" >
        coin = #{coin,jdbcType=INTEGER},
      </if>
    </set>
    where taskId = #{taskid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ShawnYin.WSP.entity.Task" >
    update unfinishedtask
    set taskName = #{taskname,jdbcType=VARCHAR},
      publisherId = #{publisherid,jdbcType=VARCHAR},
      publisherName = #{publishername,jdbcType=VARCHAR},
      taskType = #{tasktype,jdbcType=INTEGER},
      taskDescribe = #{taskdescribe,jdbcType=VARCHAR},
      taskStatus = #{taskstatus,jdbcType=INTEGER},
      publishTime = #{publishtime,jdbcType=DATE},
      deadline = #{deadline,jdbcType=DATE},
      latitude = #{latitude,jdbcType=DOUBLE},
      longitude = #{longitude,jdbcType=DOUBLE},
      totalWorker = #{totalworker,jdbcType=INTEGER},
      nowWorker = #{nowworker,jdbcType=INTEGER},
      needWorker = #{needworker,jdbcType=INTEGER},
      coin = #{coin,jdbcType=INTEGER}
    where taskId = #{taskid,jdbcType=INTEGER}
  </update>
</mapper>